<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Post;

class PostsController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
     public function index()
    {
        //$users = auth()->user()->following()->pluck('users.user_id');
        
         $data = [];
            if (\Auth::check()) {
                $user = \Auth::user();
                $posts = Post::orderBy('created_at', 'desc')->paginate(100);
                //$posts = Post::whereIn('user_id', $users)->latest()->get(); //追加
                
                $data = [
                    'user' => $user,
                    'posts' => $posts,
                ];
            }
        
        return view('welcome', $data);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        $post = new Post;

        return view('posts.create', [
            'post' => $post,
        ]);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $this->validate($request, [
            'title' => 'required|max:191',  
            'content' => 'required|max:191',
        ]);
        
        
        $request->user()->posts()->create([
            'title' => $request->title,
            'content' => $request->content,
        ]);

        return redirect('/');
        
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        $post = Post::find($id);

        return view('posts.show', [
            'post' => $post,
        ]);
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        $post = Post::find($id);

        return view('posts.edit', [
            'post' => $post,
        ]);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        $this->validate($request, [
            'title' => 'required|max:191',   // 追加
            'content' => 'required|max:191',
        ]);
        
        $post = Post::find($id);
        $post->title = $request->title;    // 追加
        $post->content = $request->content;
        $post->save();

        return redirect('/');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        $post = \App\Post::find($id);

        if (\Auth::id() === $post->user_id) {
            $post->delete();
        }

        return back();
    }
}

@if (Auth::id() == $post->user_id)
    {!! Form::open(['route' => ['posts.destroy', $comments->id], 'method' => 'delete', 'class' => 'form-inline']) !!}
        <!--<input class="btn btn-danger btn-sm" type="submit" value="Delete">-->
        {!! Form::submit('Delete', ['class' => 'btn btn-outline-danger btn-sm offset-md-4 btn-sm-4']) !!}
    {!! Form::close() !!}
@endif